# Generated by Django 2.2 on 2019-04-24 23:37

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemType', models.CharField(choices=[('PAGE', 'Page'), ('CAT', 'Training Category')], max_length=15)),
                ('iconRef', models.CharField(help_text='From <a href="https://fontawesome.com/icons?d=gallery&m=free">Font Awesome 5</a>. Example: <code>fas fa-user</code>.', max_length=25, verbose_name='Icon Code')),
                ('iconName', models.CharField(max_length=25, verbose_name='Icon Name')),
                ('weight', models.IntegerField()),
                ('primary', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('viewName', models.CharField(blank=True, default=None, help_text='For pages only.', max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('grad_year', models.IntegerField(blank=True, null=True)),
                ('committee', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(choices=[('GRAD', 'Graduated'), ('STU', 'Student'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=15)),
                ('slug', models.SlugField(max_length=100, null=True, unique=True)),
                ('is_trainer', models.BooleanField(default=False, help_text='Tick if this person trains others.')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Training_Spec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainingId', models.DecimalField(decimal_places=2, max_digits=4, unique=True)),
                ('trainingTitle', models.CharField(max_length=50, verbose_name='Training Title')),
                ('description', models.TextField(default='Provide a useful description')),
                ('safety', models.BooleanField(default=False, help_text='Tick if training point has a health and safety element, or requires a period of supervision before signing off.')),
                ('category', models.ForeignKey(limit_choices_to={'itemType': 'CAT'}, on_delete=django.db.models.deletion.DO_NOTHING, to='nt_training.Icon')),
            ],
            options={
                'verbose_name': 'Training Specification',
                'ordering': ['category', 'trainingId'],
            },
        ),
        migrations.CreateModel(
            name='Training_Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('trainee', models.ManyToManyField(related_name='trainee', to='nt_training.Person')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='trainer', to='nt_training.Person')),
                ('trainingId', models.ManyToManyField(to='nt_training.Training_Spec')),
            ],
            options={
                'verbose_name': 'Training Session',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Department Name')),
                ('person', models.CharField(help_text='Person in charge of the department', max_length=50)),
                ('email', models.EmailField(help_text='Email address of the person in charge', max_length=254)),
                ('weight', models.IntegerField(unique=True)),
                ('department_icon', models.CharField(default='fa fa-', help_text='From <a href="https://fontawesome.com/icons?d=gallery&m=free">Font Awesome 5</a>. Example: <code>fas fa-user</code>.', max_length=25, verbose_name='Icon Code')),
            ],
            options={
                'ordering': ['weight'],
            },
        ),
        migrations.AddField(
            model_name='icon',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Department this category belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='nt_training.Department'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='primary',
            field=models.BooleanField(default=False, help_text='For pages only. Tick to appear on the homepage.'),
        ),
        migrations.AlterModelOptions(
            name='icon',
            options={'ordering': ['itemType', 'weight']},
        ),
        migrations.AlterField(
            model_name='icon',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Department this category belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='nt_training.Department'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='department',
            field=models.ForeignKey(blank=True, help_text="Department this category belongs to. If you're using departments, you <strong>must</strong> set this for the category to appear.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='nt_training.Department'),
        ),
    ]
